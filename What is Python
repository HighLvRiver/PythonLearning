1. What is Python ?

파이썬 언어(이하 파이썬)는 1991년 귀도 반 로섬(Guido van Rossum)이 개발한 범용 프로그래밍 언어이다. 
# 귀도 반 로섬에서 van은 네덜란드 사람들의 이름의 형식에서 from 이라는 의미. 로섬에서 온 귀도 
# Python이라는 이름은 Monty Python's Flying Circus 에서 유래
# 크리스마스에 할 일이 없어서 개발했다고 함..
스크립트 기반의 언어이고 플랫폼 독립적이므로 어떤 운영체제에서도 사용가능하며 객체 지향(OOP) 및 동적 타입(dynamic type) 특성을 가진다.

파이썬이 데이터 분석 언어로써 널리 사용되는 이유 중의 하나는 NumPy, SciPy, Pandas, Scikit-learn, Statsmodels 등 
다양한 수치 해석 및 데이터 분석 라이브러리를 가지기 있기 때문이다. 
또한 범용 언어로서 독립 실행 애플리케이션, 웹 서버 등의 개발이 용이하고 다른 프로그래밍 언어와 연동이 쉽다는 것도 파이썬의 인기 요소이다.

다만 R과 마찬가지로 스크립트 언어이기 때문에 실행 속도가 C/C++ 등의 컴파일 언어에 비해 일반적으로 느리다. 
그러나 핵심 코드만 C언어등을 사용하여 개발이 가능하고 다양한 Cython, Numba 등 다양한 최적화 옵션이 존재하며 
최근에는 Pyston, PyPy 등 JIT가 가능한 파이썬 구현도 개발되어 속도에 대한 부담이 점차 줄어들고 있다.

정확히 말하면 파이썬이란 파이썬 스크립트 언어를 해석하여 실행할 수 있는 인터프리터 엔진을 말한다. 
그러나 실제로는 구체적인 기능을 수행하는 패키지(라이브러리)가 함께 설치되어야 한다. 
따라서 리눅스와 마찬가지로 패키지와 패키지 관리 유틸리티를 포함한 다양한 배포판이 존재한다. 
현재 가장 널리 쓰이는 파이썬 배포판은 Continuum Anaytics 사가 개발한 아나콘다(Anaconda) 배포판이다.

1-1. 플랫폼 독립적 : OS에 상관없이 어떤 운영체제에서도 사용 가능
1-2. 인터프리터 언어 
   ㅇ 인터프리터 : 소스코드를 바로 실행할 수 있게 지원하는 프로그램 실행 방법
   ㅇ 컴파일러 vs 인터프리터
        1) 컴파일러 # 번역의 개념 
             - 소스코드를 기계어로 먼저 번역
             - 실행 속도가 빠르고, 한번의 많은 기억장소 필요
             - C, 자바, C++, C# 등
        2) 인터프리터 # 통역의 개념  
             - 별도의 번역과정 없이 소스코드를 실행시점에 해석하여 컴퓨터가 처리할 수 있도록 함
             - 간단히 작성, 메모리가 적게 필요하지만 실행 속도가 느림
             - 파이썬, 스칼라
1-2. 객체 지향적 : 실행순서가 아닌 단위모듈(객체) 중심으로 프로그램을 작성
1-3. 동적 타입 언어 : 프로그램이 실행하는 시점에 프로그램이 사용해야할 데이터에 대한 타입을 결정함

2. Why Python?
    ㅇ 쉽게 간단하며, 다양한 기능을 제공
        - 인간지향적인 간단한 언어
        - 다양한 라이브러리와 넓은 활용 범위
    ㅇ 가장 대중화된 언어

3. Python vs R

비교 |  R                             |  Python
-----------------------------------------------------------------------------------------------
특징 |  S/S+ 언어와 호환되는 통계 계산용 언어 |   범용 프로그래밍 언어
    |  무료 오픈소스                    |   객체 지향, 동적 타입
장점 |  통계 계산에 최적화된 각종 자료형      |   다양한 수치해석 및 데이터 분석 패키지들
    |  다양한 통계 패키지들               |   (NumPy, SciPy, Pandas, Scikit-learn, Statsmodels 등)
    |                                |   독립 실행 애플리케이션, 웹 서버 개발 가능  
    |                                |   다른 프로그래밍 언어와 연동 용이
단점 | 느린 속도, 범용 언어가 아님          |   느린 속도

4. 아나콘다(Anaconda)
    ㅇ 가장 후발 주자 (2012년 설립)
    ㅇ 2017년 현재 사실상의 표준(de facto standard)
    ㅇ 모든 플랫폼(윈도우즈/리눅스/맥 32비트/64비트)에 대해 완벽한 패키지 제공

4-1. 패키지 종류

```
ActiveState
pythonxy
winpython
Conceptive
Enthought Canopy
PyIMSL Studio
eGenix PyRun
Anaconda
```

4-2. 아나콘다 배포판 설치 : https://www.continuum.io/downloads 에서 다운로드
4-3. 아나콘다 구성

```
Anaconda Prompt
IPython
Jupyter Notebook
Jupyter QTConsole
Spyder 
 - Scientific Python Development Environment. 
 - Powerful Python IDE with advanced editing, interacive testing, debugging and introspection features.
```
# IDE : Integrated Development Environment
# 효율적으로 소프트웨어를 개발하기 위한 통합개발환경 소프트웨어 어플리케이션 인터페이스이다. 
# 코드 편집기, 디버거, 컴파일러, 인터프리터 등을 포함하고 개발자에게 제공한다
# Spyder는 matlab에 가깝고, PyCharm은 Visual Studio에 가깝다.

5. 아나콘다를 활용한 패키지 설치 : Environments -> Search Packages

6. 데이터 분석용 파이썬 패키지

여러 분야 사용할 수 있는 다양한 패키지를 가지고 있다는 점은 파이썬의 큰 장점이다. 
2017년 3월 현재 PyPI 서버(https://pypi.python.org/pypi)를 통해 공식적으로 제공되는 파이썬 라이브러리의 숫자는 약 98,000개이다.

```
ㅇ NumPy
    - 수치해석 라이브러리
    - http://www.numpy.org/
    - 2006, Travis Oliphant
ㅇ SciPy
    - 과학기술 함수 라이브러리
    - http://www.scipy.org/
    - 2001, Travis Oliphant, Pearu Peterson
ㅇ SymPy
    - 심볼릭 연산 라이브러리
    - http://www.sympy.org/
    - 2006, Ondřej Čertík
ㅇ Matplotlib
    - 시각화 라이브러리, matlab 플롯 기능 구현
    - http://matplotlib.org/
    - 2002, John D. Hunter
ㅇ seaborn
    - 시각화 라이브러리. 통계용 차트 및 컬러맵 추가
    - https://stanford.edu/~mwaskom/software/seaborn/
    - 2012, Michael Waskom
ㅇ bokeh
    - 시각화 라이브러리. 웹상에서 인터액티브 플롯 구현
    - http://bokeh.pydata.org
    - 2012, Peter Wang
ㅇ pandas
    - 데이터 분석 라이브러리. R의 data.frame 자료구조 구현
    - http://pandas.pydata.org/
    - 2008, Wes McKinney (AQR Capital Management)
ㅇ statsmodels
    - 다변량 회귀 분석 및 시계열 분석 라이브러리
    - http://statsmodels.sourceforge.net/stable/
    - 2009, Skipper Seabold
ㅇ scikit-learn
    - 머신러닝 라이브러리
    - http://scikit-learn.org
    - 2007, David Cournapeau
ㅇ TensorFlow
    - 딥러닝 라이브러리
    - https://www.tensorflow.org/
    - 2015, google
ㅇ Keras
    - 고수준 딥러닝 라이브러리
    - https://keras.io/
    - 2015, François Chollet
```
