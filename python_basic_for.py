
# coding: utf-8

# # 파이썬 for 반복문 기초
# 
# for 반복문

# print("=1=")
# print("=2=")
# print("=3=")
# print("=4=")
# print("=5=")
# print("=6=")
# print("=7=")
# print("=8=")
# print("=9=")

# In[1]:

for i in range(10):
    print("=")


# In[2]:

for i in range(10):
    print(i)


# In[3]:

for i in range(10):
    print("=" + str(i) + "=")
    
# x = [i ** 2 for i in range(10)]
# x


# 연습문제1.
# for 반복문과 문자열 연산을 사용하여 다음과 같이 인쇄한다.
# 
# *
# **
# ***
# ****
# *****
# ******
# *******
# ********
# *********
# **********

# In[4]:

for i in range(10):
    print("*" * i)


# 연습문제2.
# for 반복문과 문자열 연산을 사용하여 다음과 같이 인쇄한다.
# 
# **********
# *********
# ********
# *******
# ******
# *****
# ****
# ***
# **
# *

# In[5]:

for i in range(10):
    print("*" * (10 - i))


# 연습문제3.
# for 반복문과 문자열 연산, if 조건문을 사용하여 다음과 같이 인쇄한다.
# 
# *
# **
# ***
# ****
# *****
# ******
# *******
# ********
# *********
# **********
# *********
# ********
# *******
# ******
# *****
# ****
# ***
# **
# *

# In[6]:

for i in range(20):
    if i <= 10:
        print("*" * i)
    else :
        print("*" * (20 - i))


# 연습문제4
# for 반복문과 문자열 연산, if 조건문을 사용하여 다음과 같이 인쇄한다.
# 
#      * 
#     ***
#    *****
#   *******
#  *********
# ***********
#  *********
#   *******
#    *****
#     ***
#      *

# In[7]:

for i in range(11):
    if i <= 5 :
        print(" " * (5 - i) + "*" * (i * 2 + 1) )
    else :
        print(" " * (i - 5) + "*" * ((10 - i) * 2 + 1))


# 중첩 for 반복문
# 
# 0 1 2 3 
# 1 2 3 4 
# 2 3 4 5 
# 3 4 5 6

# In[8]:

for i in range(4):
    for j in range(4):
        print(i + j, end=" ")
    print()


# 1부터 6까지의 눈금이 있는 주사위를 두 번 던져서 나올 경우의 수 구하기

# In[9]:

for i in range(6):
    n1 = i + 1
    for j in range(6):
        n2 = j + 1
        print(n1, n2)


# 연습문제4
# 
# 어떤 주식의 가격은 매일 한 번 동전을 던져서 앞면이 나오면 전날 가격의 2배가 되고 
# 뒷면이 나오면 전날 가격의 절반이 된다.
# 
# 1일에 주식의 가격이 1024원이었을 경우에 
# 4일의 주식의 가격이 나올 수 있는 경우를 모두 구한다.
# 
# (힌트: for 반복문이 3개 중첩되어야 한다.)

# In[10]:

c = 1024
for i in range(2):
    if i == 0:
        x2 = "앞면"
        m2 = 2
    else :
        x2 = "뒷면"
        m2 = 0.5
    for j in range(2):
        if j == 0:
            x3 = "앞면"
            m3 = 2
        else:
            x3 = "뒷면"
            m3 = 0.5
        for k in range(2):
            if k == 0:
                x4 = "앞면"
                m4 = 2
            else:
                x4 = "뒷면"
                m4 = 0.5
            k = c * m2 * m3 * m4
            print(x2, x3, x4, k)


# 카운터 변수가 변하는 경우
# 
# 가장 복잡한 경우는 안쪽의 반복문의 반복 횟수가 바깥쪽 반복문의 카운터 변수에 따라 변하는 경우이다.
# 
# 예를 들어 1부터 5까지의 합은 다음과 같이 하나의 반복문으로 구할 수 있지만,

# In[11]:

n = 5

sum = 0
for i in range(n):
    sum = sum + (i + 1)
print(sum)


# 1부터 1까지의 합, 1부터 2까지의 합, 1부터 3까지의 합, 
# 이런 식으로 1부터 10까지의 합을 각각 다 구해야 한다면 다음과 같이 반복문을 중첩해야 한다.

# In[12]:

for j in range(10):
    sum = 0
    for i in range(j + 1):
        sum = sum + (i + 1)
    print(sum)


# 연습문제5
# 
# 다음과 같은 수열이 있을 경우에  n번째 수열의 값을 구한다.
# 
# 1
# 1+(1+2)
# 1+(1+2)+(1+2+3)
# 1+(1+2)+(1+2+3)+(1+2+3+4)
# ⋮ 
# 1+(1+2)+(1+2+3)+(1+2+3+4)+⋯+(1+⋯+n)

# In[16]:

n = 10
sum = 0

for i in range(n):
    for j in range(i+1):
        sum = sum + (j+1)
    print("{}번째 수열의 값은 {} 입니다.".format(i+1, sum))


# def fibo(n):
#    if n in (1,2) :
#        return 1
#    else :
#        return fibo(n-1) + fibo(n-2)

